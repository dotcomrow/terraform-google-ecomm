name: 'Terraform'

on:
  push:
    branches: [ "master" ]
  pull_request:
    
permissions: write-all

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - name: Get next version
      uses: reecetech/version-increment@2023.9.3
      id: version
      with:
        scheme: calver
        increment: patch

    - name: Create release
      uses: "actions/github-script@v6"
      env:
            VERSION: ${{ steps.version.outputs.version }}
      with:
              github-token: "${{ github.token }}"
              script: |
                try {
                  const response = await github.rest.repos.createRelease({
                    draft: false,
                    generate_release_notes: true,
                    name: process.env.VERSION,
                    owner: context.repo.owner,
                    prerelease: false,
                    repo: context.repo.repo,
                    tag_name: process.env.VERSION,
                  });
                  core.exportVariable('RELEASE_ID', response.data.id);
                  core.exportVariable('RELEASE_UPLOAD_URL', response.data.upload_url);
                } catch (error) {
                  core.setFailed(error.message);
                }
